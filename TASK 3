using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;

namespace server
{
    class Program
    {
        static void Main(string[] args)
        {
            DataBase dataBase = new DataBase();
            dataBase.Menu();
        }
    }

    class DataBase
    {
        private List<Player> _players = new List<Player>();

        public void ShowData()
        {
            for (int i = 0; i < _players.Count; i++)
            {
                Console.Write($"{i+1}-й игрок: ");
                _players[i].ShowPlayer();
                Console.WriteLine();
            }
        }

        public void Menu()
        {
            Console.WriteLine("Выберите, что хотите сделать: 1 - добавить игрока 2 -  удалить игрока  3 - забанить/разбанить игрока по порядковому номеру4 - покинуть программу");
            string userInput = default;
            while (userInput!="4")
            {
                userInput = Console.ReadLine();
                switch (userInput)
                {
                    case "1":
                        AddPlayer();
                        Console.WriteLine("Выберите следующую команду");
                        break;
                    case "2":
                        RemovePlayer();
                        Console.WriteLine("Выберите следующую команду");
                        break;
                    case "3":
                        BanUnbanPlayer();
                        Console.WriteLine("Выберите следующую команду");
                        break;
                    case "4":
                        Console.WriteLine("Вы покинули программу");
                        break;
                    default:
                        Console.WriteLine("Такого делать мы не умеем");
                        break;
                }
            }

        }

        public void AddPlayer()
        {
            Console.WriteLine("Введите идентификационный номер игрока: ");
            int userInputNumber = CheckInput();

            Console.WriteLine("Введите никнейм игрока: ");
            string userInputNickname = Console.ReadLine();

            Console.WriteLine("Введите уровень игрока: ");
            int userInputLevel = CheckInput();
            Player player = new Player(userInputNumber, userInputNickname, userInputLevel);

            Console.WriteLine("Статус бана игрока, напишите: да(забанен)или нет(незабанен)");
            player.SetBanStatus();
            
            _players.Add(player);
            Console.WriteLine("Игрок добавлен");
        }

        public void RemovePlayer()
        {
            if (_players.Count <= 0)
            {
                Console.WriteLine("База данных пустая, попробуйте кого-то добавить");
            }
            else
            {
                ShowData();
                Console.WriteLine("Введите порядковый номер игрока, которого хотите удалить");
                int findPlayerNumber = CheckInput() - 1;
                if (findPlayerNumber > _players.Count || findPlayerNumber < 0)
                {
                    Console.WriteLine("Таких данных нету, введите другую команду");
                }
                else
                {
                    _players.RemoveAt(findPlayerNumber);
                    Console.WriteLine("Игрок удален, введите следующую команду");
                }
            }
        }

        public int CheckInput()
        {
            int userInput = default;
            bool isWorking = true;
            while (isWorking)
            {
                if (int.TryParse(Console.ReadLine(), out userInput))
                {
                    isWorking = false;
                }
                else
                {
                    Console.WriteLine("Уровнем игрока должно быть число");
                }
            }
            return userInput;
        }

        public void BanUnbanPlayer()
        {
            if (_players.Count <= 0)
            {
                Console.WriteLine("База данных пустая, попробуйте кого-то добавить");
            }
            else
            {
                ShowData();
                Console.WriteLine("Введите порядковый номер игрока, которого хотите забанить/разбанить");
                int findPlayerNumber = Convert.ToInt32(Console.ReadLine()) - 1;

                if (findPlayerNumber > _players.Count || findPlayerNumber < 0)
                {
                    Console.WriteLine("Таких данных нету");
                }
                else
                {
                    Console.WriteLine("Статус бана игрока, напишите: да(забанен)или нет(незабанен)");
                    _players[findPlayerNumber].SetBanStatus();
                }
            }
        }
    }
    class Player
    {
        private string _nickname;
        private int _number;
        private bool _isBanned;
        private int _level;

        public Player(int number, string nickname, int level)
        {
            _number = number;
            _nickname = nickname;
            _level = level;
        }

        public void ShowPlayer()
        {
            Console.Write($"Номер игрока - {_number}\t Ник - {_nickname}\t Статус бана - {_isBanned}\t Уровень - {_level} ");
        }

        public void SetBanStatus()
        {
            string inputPlayerStatus = default;
            while (inputPlayerStatus != "да" && inputPlayerStatus != "нет")
            {
                inputPlayerStatus = Console.ReadLine();
                if (inputPlayerStatus == "да")
                {
                    _isBanned = true;
                }
                else if (inputPlayerStatus == "нет")
                {
                    _isBanned = false;
                }
                else
                {
                    Console.WriteLine("Ошибка ввода, попробуйте еще раз");
                }
            }
        }
    }
}
