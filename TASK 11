using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;

namespace CarService
{   
    class Program
    {
        static void Main(string[] args)
        {
            AutoService autoService = new AutoService();
            autoService.CreateCar(15);
            autoService.Work();
        }
    }

    class AutoService
    {
        private Random _random = new Random();
        private int _income;
        private Dictionary<string, int> _wareHouse = new Dictionary<string, int>();

        public void CreateWarehouse(Car car)
        {
            for (int i = 0; i < car.SparePartsCount; i++)
            {
                int amountOfDetails = _random.Next(3, 9);
                _wareHouse.Add(car.GetPart(i), amountOfDetails);
            }
        }

        public void ShowWareHouse()
        {
            foreach (var detail in _wareHouse)
            {
                Console.WriteLine($"деталь - {detail.Key}, количество - {detail.Value}");
            }
        }

        private Queue<Car> _brokenCars = new Queue<Car>();
        public void CreateCar(int amountOfBrokenCars)
        {
            for (int i = 0; i < amountOfBrokenCars; i++)
            {
                Car car = new Car();
                car.BreakDown();
                _brokenCars.Enqueue(car);
            }
        }

        public void Work()
        {
            Car model = new Car();
            CreateWarehouse(model);
            while (_brokenCars.Count>0)
            {
                Car car = _brokenCars.Dequeue();
                car.ShowBrokenDetails();
                Console.WriteLine("Нажмите enter чтоблы посмотреть что можно с этой машиной сделать");
                Console.ReadLine();
                ReplacePart(car);
                Console.WriteLine("Нажмите любую кнопку чтобы перейти к следующей машине");
                Console.ReadLine();
                Console.Clear();
            }

            Console.WriteLine($"рабочий день окончен, вы заработали {_income}");
        }

        public void ReplacePart(Car car)
        {
            for (int i = 0; i < car.BrokenDetailsCount; i++)
            {
                if (_wareHouse.ContainsKey(car.GetDetailName(i)) && _wareHouse[car.GetDetailName(i)] > 0)
                {
                Console.WriteLine($"Деталь {car.GetDetailName(i)} заменена");
                _income += car.BuyParts(i);
                _wareHouse[car.GetDetailName(i)]--;
                }
                else
                {
                _income -= car.GetDetailPrice(i);
                Console.WriteLine($"деталь {car.GetDetailName(i)} отсутствует на складе, возвращаем вам  {car.GetDetailPrice(i)} денег");
                }
            }
        Console.WriteLine($"в вашей копилке {_income}. на складе есть такие детали:");
            ShowWareHouse();
        }
    }

    class Car
    {
        private Random _random = new Random();
        static private List<Detail> _spareParts = new List<Detail>
        {
            new Detail("руль", 200),
            new Detail("коробка передач", 300),
            new Detail("радио", 250),
            new Detail("двигатель", 800),
            new Detail("ходовая", 500),
            new Detail("краска", 100),
            new Detail("печка", 400),
            new Detail("кондиционер", 450),
        };
        private List<Detail> _brokenParts = new List<Detail>();

        public int BrokenDetailsCount => _brokenParts.Count;
        public int SparePartsCount => _spareParts.Count;

        public void BreakDown()
        {
            int amountOfBrokenDetails = _random.Next(1, _spareParts.Count);
            for (int i = 0; i < amountOfBrokenDetails; i++)
            {
                _brokenParts.Add(_spareParts[_random.Next(0, _spareParts.Count)]);
            }
            for (int i = 0; i < _brokenParts.Count - 1; i++)
            {
                for (int t = i; t < _brokenParts.Count; t++)
                {
                    if (_brokenParts[i] == _brokenParts[t] && t > i)
                    {
                        _brokenParts.RemoveAt(t);
                    }
                }
            }
        }

        public int BuyParts(int index)
        {
            return _brokenParts[index].RepairCost;
        }

        public void ShowBrokenDetails()
        {
            Console.WriteLine("Мне нужно починить: ");
            foreach (var brokenPart in _brokenParts)
            {
                Console.WriteLine(brokenPart.Name + " " + brokenPart.RepairCost);
            }
        }

        public string GetDetailName(int index)
        {
            return _brokenParts[index].Name;
        }

        public int GetDetailPrice(int index)
        {
            return _brokenParts[index].RepairCost;
        }

        public string GetPart(int index)
        {
            return _spareParts[index].Name;
        }
    }

    class Detail
    {
        public string Name { get; private set; } 
        public int RepairCost { get; private set; }

        public Detail(string name, int repairCost)
        {
            Name = name;
            RepairCost = repairCost;
        }

        public void ShowInfo()
        {
            Console.WriteLine(Name + " - " + RepairCost + " денег");
        }
    }
}
