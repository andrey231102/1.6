using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;

namespace CarService
{   
    class Program
    {
        static void Main(string[] args)
        {
            AutoService autoService = new AutoService(5);
            autoService.Work();
        }
    }

    class AutoService
    {
        private int _income;
        private Random _random = new Random();
        private Queue<Car> _brokenCars = new Queue<Car>();
        private List<Detail> _spareParts = new List<Detail>
        {
            new Detail("руль", 200),
            new Detail("коробка передач", 300),
            new Detail("радио", 250),
            new Detail("двигатель", 800),
            new Detail("ходовая", 500),
            new Detail("краска", 100),
            new Detail("печка", 400),
            new Detail("кондиционер", 450),
        };
        private Dictionary<string, int> _wareHouse = new Dictionary<string, int>();

        public AutoService(int amountOfBrokenCars)
        {
            for (int i = 0; i < amountOfBrokenCars; i++)
            {
                Car car = new Car();
                car.BreakDown(_spareParts);
                _brokenCars.Enqueue(car);
            }
        }

        public void CreateWarehouse()
        {
            for (int i = 0; i < _spareParts.Count; i++)
            {
                int amountOfDetails = _random.Next(3, 9);
                _wareHouse.Add(_spareParts[i].Name, amountOfDetails);
            }
        }

        public void ShowWarehouse()
        {
            foreach (var detail in _wareHouse)
            {
                Console.WriteLine($"деталь - {detail.Key}, количество - {detail.Value}");
            }
        }

        public void Work()
        {
            CreateWarehouse();

            while (_brokenCars.Count>0)
            {
                Car car = _brokenCars.Dequeue();
                car.ShowBrokenDetails();
                Console.WriteLine("Нажмите enter чтоблы посмотреть что можно с этой машиной сделать");
                Console.ReadLine();
                Console.WriteLine("Вы хотите попробовать починить этот автомобиль? 1 - приступить к работе, 2 - отказать в работе");
                string userInput = default;
                bool nextCar = true;    
                while (nextCar)
                {
                    userInput = Console.ReadLine();
                    if (userInput == "1")
                    {
                        ReplacePart(car);
                        nextCar = false;
                    }
                    else if(userInput =="2")
                    {
                        Console.WriteLine("Он уехал, но мы вынуждены были выплатить штраф в размере 500 - 1500 денег за моральный ущерб");
                        _income -= _random.Next(500, 1500);
                        Console.WriteLine($"У вас осталось {_income} денег");
                        nextCar = false;
                    }
                    else
                    {
                        Console.WriteLine("такой функции нету");
                    }
                }
                Console.WriteLine("Нажмите любую кнопку чтобы перейти к следующей машине");
                Console.ReadLine();
                Console.Clear();
            }
            if (_income>0)
            {
                Console.WriteLine($"рабочий день окончен, вы заработали {_income}");
            }
            else
            {
                Console.WriteLine("Вы влезли в долги, начальник будет недоволен");
            }
        }

        public void ReplacePart(Car car)
        {
            ShowWarehouse();
            for (int i = 0; i < car.BrokenDetailsCount; i++)
            {
                Console.WriteLine($"На какую деталь вы хотите заменить {car.GetDetailName(i)}. Напишите название этой детали или 1 если не хотите ее менять, но тогда заплатите штраф");
                bool detailIsChanged = false ;
                while (detailIsChanged == false)
                {
                    detailIsChanged = ChooseReplacementPart(car, i);
                    Console.WriteLine();
                }
            }
            Console.WriteLine($"в вашей копилке {_income}.");
        }

        public void ReplaceWrongPart(Car car, string userInput, int index)
        {
            if (_random.Next(0, 2) == 0)
            {
                Console.WriteLine("Водитель не заметил подмену");
                _income += car.GetDetailPrice(index);
                _wareHouse[userInput]--;
                Console.WriteLine("Вы успешно заменили деталь");
            }
            else
            {
                Console.WriteLine($"Вас поймали на замене не той детали, вы выплатили водителю двойную цену за деталь {car.GetDetailName(index)} и потеряли деталь {userInput}");
                _income -= 2 * car.GetDetailPrice(index);
                _wareHouse[userInput]--;
            }
        }

        public bool ChooseReplacementPart(Car car, int index)
        {
            string userInput = Console.ReadLine();
            if (car.GetDetailName(index) == userInput && _wareHouse.ContainsKey(userInput) && _wareHouse[userInput] > 0)
            {
                _income += car.GetDetailPrice(index);
                _wareHouse[userInput]--;
                Console.WriteLine("Вы успешно заменили деталь");
                return true;
            }
            else if (car.GetDetailName(index) != userInput && _wareHouse.ContainsKey(userInput) && _wareHouse[userInput] > 0)
            {
                ReplaceWrongPart(car, userInput, index);
                return true;
            }
            else if (userInput == "1")
            {
                Console.WriteLine($"вы возместили водителю цену за {car.GetDetailName(index)}");
                _income -= car.GetDetailPrice(index);
                Console.WriteLine();
                return true;
            }
            else
            {
                Console.WriteLine("Такой детали на складе нету, попробуйте еще раз");
                return false;
            }
        }
    }

    class Car
    {
        private static Random _random = new Random();
        private List<Detail> _brokenParts = new List<Detail>();

        public int BrokenDetailsCount => _brokenParts.Count;

        public void BreakDown(List<Detail> spareParts)
        {
            for (int i = 0; i < spareParts.Count; i++)
            {
                if (_random.Next(0, 2) == 1)
                {
                    continue;
                }
                else
                {
                    _brokenParts.Add(spareParts[i]);
                }
            }
        }

        public void ShowBrokenDetails()
        {
            Console.WriteLine("Мне нужно починить: ");
            foreach (var brokenPart in _brokenParts)
            {
                Console.WriteLine(brokenPart.Name + " " + brokenPart.RepairCost);
            }
        }

        public int GetDetailPrice(int index)
        {
            return _brokenParts[index].RepairCost;
        }

        public string GetDetailName(int index)
        {
            return _brokenParts[index].Name;
        }
    }

    class Detail
    {
        public string Name { get; private set; } 
        public int RepairCost { get; private set; }

        public Detail(string name, int repairCost)
        {
            Name = name;
            RepairCost = repairCost;
        }
    }
}
