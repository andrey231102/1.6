using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;

namespace qwerty
{
    class Program
    {
        static void Main(string[] args)
        {
            int fighterIndex = default;

            Fighter[] fighters =
            {
                new Knight(200, 40),
                new Mage(120, 10, 80),
                new Ninja(150, 20, 70),
                new RoboCop(200, 30, 50),
                new Exorcist(150, 25, 60)
            };

            for (int i = 0; i < fighters.Length; i++)
            {
                Console.Write($"{i + 1} ");
                fighters[i].ShowInfo();
            }
 
            Console.WriteLine("Выберите номер своего героя");
            Fighter myFighter = ChooseFighter(fighters, fighterIndex);
            Console.WriteLine("Выберите номер своего противника");
            Fighter opponent = ChooseFighter(fighters, fighterIndex);

            if (myFighter == opponent)
            {
                Console.WriteLine("Выберите разных персонажей");
            }
            else
            {
                while (myFighter.Health > 0 && opponent.Health > 0)
                {
                    myFighter.TakeDamage(opponent.Damage);
                    opponent.TakeDamage(myFighter.Damage);
                    myFighter.UseAbility();
                    opponent.UseAbility();
                    myFighter.ShowInfo();
                    opponent.ShowInfo();
                    Console.ReadLine();
                }

                if (myFighter.Health <= 0 && opponent.Health <= 0)
                {
                    Console.WriteLine("ничья");
                }
                else if (myFighter.Health <= 0)
                {
                    Console.WriteLine($"Ваш герой проиграл");
                }
                else
                {
                    Console.WriteLine($"Ваш герой победил");
                }
            }
        }

        static Fighter ChooseFighter(Fighter[] fighters, int fighterIndex)
        {
            bool isWorking = true;
            while (isWorking)
            {
                if (false == int.TryParse(Console.ReadLine(), out fighterIndex))
                {
                    Console.WriteLine("Это не число");
                }
                else
                {
                    if (fighterIndex > fighters.Length || fighterIndex <= 0)
                    {
                        Console.WriteLine("Таких героев нету в списке");
                    }
                    else
                    {
                        isWorking = false;
                    }
                }
            }
            return fighters[fighterIndex-1];
        }
    }

    class Fighter
    {
        protected string Name;
        protected int Armor;
        protected string Skill;

        public int Health { get; protected set; }
        public int Damage { get; protected set; }

        public Fighter(string name, int health, int armor, int damage, string skill)
        {
            Name = name;
            Health = health;
            Armor = armor;
            Damage = damage;
            Skill = skill;
        }

        public void TakeDamage(int damage)
        {
            Health -= (damage - (Armor * damage) / 100);
            Console.WriteLine($"{Name} получил {damage} урона");
        }

        public void ShowInfo()
        {
            Console.WriteLine($"{Name}. Количество хп - {Health}. Количество брони - {Armor}. Урон - {Damage}");
        }

        public virtual void UseAbility()
        {
            Console.WriteLine(Name + " использовал " + Skill);
        }
    }

    class Knight : Fighter
    {
        public Knight(int health, int damage) : base("knight", health, 40, damage, "укрепление") { }

        public override void UseAbility()
        {
            base.UseAbility();
            Armor += 5;
        }
    }

    class Mage : Fighter
    {
        public Mage(int health, int armor, int damage) : base("Mage", health, armor, damage, "супер усиление спэлов") { }
        public override void UseAbility()
        {
            UseAbility();
            Damage += 10;
        }
    }

    class Ninja : Fighter
    {
        public Ninja(int health, int armor, int damage) : base("Ninja", health, armor, damage, "перекачка чакры") { }
        public override void UseAbility()
        {
            UseAbility();
            Damage += 10;
        }
    }

    class RoboCop : Fighter
    {
        public RoboCop(int health, int armor, int damage) : base("Robocop", health, armor, damage, "улучшение") { }
        public override void UseAbility()
        {
            UseAbility();
            Damage += 5;
            Health += 5;
            Armor += 5;
        }
    }

    class Exorcist : Fighter
    {
        public Exorcist(int health, int armor, int damage) : base("Exorcist", health, armor, damage, "благословение") { }
        public override void UseAbility()
        {
            Damage = Health;
        }
    }
}
