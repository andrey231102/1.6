using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;

namespace War
{
    class Program
    {
        static void Main(string[] args)
        {
            Squad firstSquad = new Squad();
            Squad secondSquad = new Squad();

            firstSquad.Create(5);
            Console.WriteLine();

            secondSquad.Create(5);
            Console.WriteLine();

            Fight(firstSquad, secondSquad);

            AnnounceWinner(firstSquad, secondSquad);
        }

        static void Fight(Squad firstSquad, Squad secondSquad)
        {
            Random random = new Random();
            bool bothSquadAlive = true;

            while (bothSquadAlive)
            {
                if (firstSquad.CountSoldiers(firstSquad) > 0 && secondSquad.CountSoldiers(secondSquad) > 0)
                {
                    Console.WriteLine("Атакует 1 отряд");
                    firstSquad.AttackEnemy(firstSquad, secondSquad, random);
                }
                if (firstSquad.CountSoldiers(firstSquad) > 0 && secondSquad.CountSoldiers(secondSquad) > 0)
                {
                    Console.WriteLine("Атакует 2 отряд");
                    secondSquad.AttackEnemy(secondSquad, firstSquad, random);
                    Console.WriteLine("нажмите любую кнопку чтобы продолжить");
                    Console.ReadKey();
                }
                else
                {
                    bothSquadAlive = false;
                }
            }
        }

        static void AnnounceWinner(Squad firstSquad, Squad secondSquad)
        {
            if (firstSquad.CountSoldiers(firstSquad) > 0 && secondSquad.CountSoldiers(secondSquad) > 0)
            {
                Console.WriteLine("ничья");
            }
            else if (firstSquad.CountSoldiers(firstSquad) > 0)
            {
                Console.WriteLine($"первый отряд победил, в нем осталось {firstSquad.CountSoldiers(firstSquad)} cолдат");
            }
            else
            {
                Console.WriteLine($"второй отряд победил, в нем осталось {secondSquad.CountSoldiers(secondSquad)} солдат");
            }
        }
    }

    class Squad
    {
        private StormTrooper _stormTrooper = new StormTrooper();
        private HeavyTrooper _heavyTrooper = new HeavyTrooper();
        private Sniper _sniper = new Sniper();
        private List<Soldier> _soldiers = new List<Soldier>();

        public void Create(int amountOfSoldiers)
        {
            Console.WriteLine("Заполните отряд какими-то солдатами: 1 - штурмовик, 2 - тяжелый штурмовик, 3 - снайпер");
            int userInput;

            while (_soldiers.Count < amountOfSoldiers)
            {
                if (false == int.TryParse(Console.ReadLine(), out userInput))
                {
                    Console.WriteLine("Это не число");
                }
                else
                {
                    if (userInput == 1)
                    {
                        _soldiers.Add(_stormTrooper);
                    }
                    else if (userInput == 2)
                    {
                        _soldiers.Add(_heavyTrooper);
                    }
                    else if (userInput == 3)
                    {
                        _soldiers.Add(_sniper);
                    }
                    else
                    {
                        Console.WriteLine("Таких войск нету");
                    }
                }
            }

            Console.WriteLine("Oтряд готов:");
            foreach (var soldier in _soldiers)
            {
                soldier.ShowInfo();
            }
        }

        public int CountSoldiers(Squad squad)
        {
            return squad._soldiers.Count;
        }

        public void AttackEnemy(Squad attackerSquad, Squad defenderSquad, Random random)
        {
            int defenderSoldier = random.Next(0, defenderSquad._soldiers.Count);
            int attackerSoldier = random.Next(0, attackerSquad._soldiers.Count);

            defenderSquad._soldiers[defenderSoldier].TakeDamage(attackerSquad._soldiers[attackerSoldier].Damage);
            Console.WriteLine($"{defenderSquad._soldiers[defenderSoldier].Name} получил {attackerSquad._soldiers[attackerSoldier].Damage} урона от {attackerSquad._soldiers[attackerSoldier].Name}");
            defenderSquad._soldiers[defenderSoldier].ShowInfo();
            if (defenderSquad._soldiers[defenderSoldier].Health <= 0)
            {
                Console.WriteLine($"{defenderSquad._soldiers[defenderSoldier].Name} вражеского отряда умер");
                defenderSquad._soldiers.RemoveAt(defenderSoldier);
            }
            Console.WriteLine();
        }
    }

    class Soldier
    {
        protected int Armor;

        public int Health { get; private set; }
        public string Name { get; private set; }
        public int Damage { get; private set; }

        public Soldier(string name, int health, int armor, int damage)
        {
            Name = name;
            Health = health;
            Armor = armor;
            Damage = damage;
        }

        public void TakeDamage(int damage)
        {
            Health -= (damage - (Armor * damage) / 100);
        }

        public void ShowInfo()
        {
            Console.WriteLine($"{Name}. Количество хп - {Health}. Количество брони - {Armor}. Урон - {Damage}");
        }
    }

    class StormTrooper : Soldier
    {
        public StormTrooper() : base("Штурмовик", 200, 30, 75) { }
    }

    class HeavyTrooper : Soldier
    {
        public HeavyTrooper() : base("Тяжелый штурмовик", 400, 60, 50) { }
    }

    class Sniper : Soldier
    {
        public Sniper() : base("Снайпер", 150, 15, 200) { }
    }
}
