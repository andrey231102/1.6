using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;

namespace NewZoo
{
    class Program
    {
        static void Main(string[] args)
        {
            Zoo zoo = new Zoo();
            zoo.ChooseCage();
        }
    }

    class Zoo
    {
        private List<Cage> _cages = new List<Cage>() 
        {
            new LionsCage(), 
            new BirdsCage(), 
            new DucksCage(), 
            new HyenasCage()
        };

        public void ChooseCage()
        {
            Console.WriteLine("К вольеру каких животных вы хотите подойти: 1 - львы, 2 - птички, 3 - утки, 4 - гиены, 5 - покинуть зоопарк");
            string userInput = default;

            while (userInput!="5")
            {
                userInput = Console.ReadLine();
                switch (userInput)
                {
                    case "1":
                        _cages[0].ShowInfo();
                        break;
                    case "2":
                        _cages[1].ShowInfo();
                        break;
                    case "3":
                        _cages[2].ShowInfo();
                        break;
                    case "4":
                        _cages[3].ShowInfo();
                        break;
                    case "5":
                        Console.WriteLine("вы покинули программу");
                        break;
                    default:
                        Console.WriteLine("такого вольера нету");
                        break;
                }
            }
        }
    }

    abstract class Cage
    {
        private Animal _animal = new Animal();
        private Random _random = new Random();
        private string _name;
        private int _animalCount;
        private string _voice;
        protected List<string> _animals = new List<string>();

        public Cage(string name, int animalCount, string voice)
        {
            _name = name;
            _animalCount = animalCount;
            _voice = voice;
        }

        public void FillCage()
        {
            for (int i = 0; i < _animalCount; i++)
            {
                _animals.Add(_animal.FindGender(_random));
            }
        }
        
        public void ShowInfo()
        {
            FillCage();
            Console.WriteLine($"тут сидят {_name}. Всего {_animalCount} штук. Они говорят {_voice}");
            for (int i = 0; i < _animalCount; i++)
            {
                Console.WriteLine($"{i+1} - {_animals[i]}");
            }
        }
    }

    class LionsCage : Cage
    {
        public LionsCage() : base("львы", 5, "ROOOOOOOOOOOOAR") { }
    }

    class BirdsCage : Cage
    {
        public BirdsCage() : base("птички", 13, "tweet tweet tweet") { }
    }

    class DucksCage : Cage
    {
        public DucksCage() : base("утки",8,"GAGAGAGAGA") { }
    }

    class HyenasCage : Cage
    {
        public HyenasCage() : base("гиены", 6, "AHAAHHAHA") { }
    }

    class Animal
    {
        public string FindGender(Random random)
        {
            if (random.Next(0, 2) == 0)
            {
                return "девочка";
            }
            else
            {
                return "мальчик";
            }
        }

    }
}

