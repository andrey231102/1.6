using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;
namespace zoo
{
    //Пользователь запускает приложение и перед ним находится меню, в котором он может выбрать, к какому вольеру подойти.
    //При приближении к вольеру, пользователю выводится информация о том, что это за вольер, сколько животных там обитает, их пол и какой звук издает животное.
    //Вольеров в зоопарке может быть много, в решении нужно создать минимум 4 вольера
    class Program
    {
        static void Main(string[] args)
        {
            Zoo zoo = new Zoo();
            zoo.Work();
        }
    }

    class Zoo
    {
        Lion lion = new Lion();
        Canary canary = new Canary();
        Duck duck = new Duck();
        Hyena hyena = new Hyena();

        private List<Cage> _cages = new List<Cage>();

        public void Createcage()
        {
            _cages.Add(new Cage("Лев", 12, lion));
            _cages.Add(new Cage("Канарейка", 15, canary));
            _cages.Add(new Cage("утка", 19, duck));
            _cages.Add(new Cage("гиена", 5, hyena));
        }

        public void Work()
        {
            Createcage();
            Console.WriteLine("К вольеру каких животных вы хотите подойти: 1 - львы, 2 - птички, 3 - утки, 4 - гиены, 5 - покинуть зоопарк");
            string userInput = default;

            while (userInput != "5")
            {
                userInput = Console.ReadLine();
                switch (userInput)
                {
                    case "1":   
                        _cages[0].ShowInfo();
                        break;
                    case "2":
                        _cages[1].ShowInfo();
                        break;
                    case "3":
                        _cages[2].ShowInfo();
                        break;
                    case "4":
                        _cages[3].ShowInfo();
                        break;
                    case "5":
                        Console.WriteLine("вы покинули программу");
                        break;
                    default:
                        Console.WriteLine("такого вольера нету");
                        break;
                }
            }
        }
    }

    class Cage
    {
        private List<Animal> _animals = new List<Animal>();

        public string Name { get; private set; }

        public Cage(string name, int amountOfSpecies, Animal animal)
        {
            Name = name;
            for (int i = 0; i < amountOfSpecies; i++)
            {
                _animals.Add(new Animal(animal.Name, animal.Voice) );
            }
        }

        public void ShowInfo()
        {
            Console.WriteLine($"Здесь находится {_animals.Count} животных вида {_animals[0].Name}");
            for (int i = 0; i < _animals.Count; i++)
            {
                Console.WriteLine($"{i+1}.{_animals[i].Name} - {_animals[i].Gender}");
                Console.WriteLine($"{_animals[i].Voice}");
            }
        }
    }

     class Animal
     {
        private Random _random = new Random();

        public string Name { get; private set; }
        public string Gender { get; private set; }
        public string Voice { get; private set; }

        public Animal(string name, string voice)
        {
            Name = name;
            Voice = voice;
            Gender = DetermineGender(_random);
        }

        public string DetermineGender(Random random)
        {
            if (random.Next(0, 2) == 0)
            {
                return "девочка";
            }
            else
            {
                return "мальчик";
            }
        }
     }

    class Lion : Animal
    {
        public Lion() : base("лев","ROOOOOOOOAAAAR"){ }
    }

    class Canary : Animal
    {
        public Canary() : base("канарейка","tweet tweet tweet") { }
    }

    class Duck : Animal
    {
        public Duck() : base("утка","gagagagagaga") { }
    }

    class Hyena : Animal 
    {
        public Hyena() : base("гиена","AHAHAHHAHAHAHA") { }
    }
}
