using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;

namespace homework
{
    class Program
    {
        static void Main(string[] args)
        {
            int inputCommandNumber = default;
            List<Player> players = new List<Player>();

            Console.WriteLine("Выберите команду: 1 - добавить игрока, 2 - удалить игрока, 3 - забанить/разбанить игрока, 4 - покинуть программу");
            while (inputCommandNumber != 4)
            {
                int userCommand = Convert.ToInt32(Console.ReadLine());
                switch (userCommand)
                {
                    case 1:
                        Console.WriteLine("Введите особый номер игрока");
                        int inputSerialNumber = Convert.ToInt32(Console.ReadLine());

                        Console.WriteLine("Введите имя игрока");
                        string inputPlayerName = Console.ReadLine();

                        Console.WriteLine("Введите уровень игрока");
                        int inputPlayerLevel = Convert.ToInt32(Console.ReadLine());

                        Player player = new Player(inputSerialNumber, inputPlayerName, inputPlayerLevel);

                        SetStatus(player);
                        players.Add(player);

                        Console.WriteLine("Игрок добавлен");
                        break;
                    case 2:
                        DeletePlayer(players);
                        break;
                    case 3:
                        ChangeStatus(players);
                        break;
                    case 4:
                        Console.WriteLine("Вы покинули программу");
                        break;
                    default:
                        Console.WriteLine("Такой команды нету");
                        break;
                }
            }
        }

        static void DeletePlayer(List<Player>players)
        {
            if (players.Count <= 0)
            {
                Console.WriteLine("База данных пустая, попробуйте кого-то добавить");
            }
            else
            {
                ShowAllPlayers(players);
                Console.WriteLine("Введите особый номер игрока, которого хотите удалить");
                int findPlayerNumber = Convert.ToInt32(Console.ReadLine());

                for (int i = 0; i < players.Count; i++)
                {
                    if (findPlayerNumber == players[i].SerialNumber)
                    {
                        players.RemoveAt(i);
                        Console.WriteLine("Игрок удален");
                    }
                }
            }
            Console.WriteLine("Введите следующую команду");
        }

        static void ChangeStatus(List<Player> players)
        {
            if (players.Count <= 0)
            {
                Console.WriteLine("База данных пустая, попробуйте кого-то добавить");
            }
            else
            {
                ShowAllPlayers(players);
                Console.WriteLine("Введите особый номер игрока чтобы сменить его статус");
                int findPlayerNumber = Convert.ToInt32(Console.ReadLine());

                for (int i = 0; i < players.Count; i++)
                {
                    if (findPlayerNumber == players[i].SerialNumber)
                    {
                        SetStatus(players[i]);
                    }
                }
            }
            Console.WriteLine("Введите следующую команду");
        }

        static void SetStatus(Player player)
        {
            Console.WriteLine("Статус бана игрока, напишите: да(забанен)или нет(незабанен)");

            string inputPlayerStatus = default;
            while (inputPlayerStatus != "да" && inputPlayerStatus != "нет")
            {
                inputPlayerStatus = Console.ReadLine();
                if (inputPlayerStatus == "да")
                {
                    player.IsBanned = true;
                }
                else if (inputPlayerStatus == "нет")
                {
                    player.IsBanned = false;
                }
                else
                {
                    Console.WriteLine("Ошибка ввода, попробуйте еще раз");
                }
            }
        }

        static void ShowAllPlayers(List<Player> players)
        {
            foreach (var player in players)
            {
                player.ShowPlayer();
            }
        }
    }

    class Player
    {
        private int _serialNumber;
        private string _nickname;
        private int _level;
        private bool _isBanned;

        public int SerialNumber
        {
            get
            {
                return _serialNumber;
            }
        }

        public bool IsBanned
        {
            get
            {
                return _isBanned;
            }
            set
            {
                _isBanned = value;
            }
        }

        public Player(int serialNumber, string nickname, int level)
        {
            _serialNumber = serialNumber;
            _nickname = nickname;
            _level = level;
        }

        public void ShowPlayer()
        {
            Console.WriteLine($"Номер игрока - {_serialNumber}, Никнейм - {_nickname}, уровень - {_level}, забанен - {_isBanned}");
        }
    }
}
